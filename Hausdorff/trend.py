import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Example distance matrix for 4 images
distance_matrix = np.array([
    [0, 1.41, 2.0, 1.8, 1.4, 1.7, 1.5, 2.0, 1.5, 1.8, 6.3, 6.5, 6.2, 6.2, 6.3, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.41, 0, 2.0, 1.73, 1.41, 1.89, 1.68, 2.0, 1.49, 1.49, 6.33, 6.56, 6.25, 6.25, 6.40, 1.1, 1.1, 1.1, 1.1, 1.1],
    [2.0, 2.0, 0, 1.41, 1.78, 1.41, 1.49, 1.41, 1.78, 2.03, 6.25, 6.48, 6.16, 6.16, 6.32, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.78, 1.73, 1.41, 0, 1.68, 1.41, 1.18, 1.41, 1.41, 1.68, 6.27, 6.49, 6.18, 6.19, 6.32, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.41, 1.41, 1.78, 1.68, 0, 1.68, 1.49, 1.90, 1.41, 1.49, 6.29, 6.49, 6.19, 6.22, 6.32, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0, 1.1],
    [1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 0]
])

# Plot the heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(distance_matrix, annot=True, cmap='coolwarm', xticklabels=['I1', 'I2', 'I3', 'I4', 'I5', 'I6', 'I7', 'I8', 'I9', 'I10', 'I11', 'I12', 'I13', 'I14', 'I15', 'I16', 'I17', 'I18', 'I19', 'I20'], 
            yticklabels=['I1', 'I2', 'I3', 'I4', 'I5', 'I6', 'I7', 'I8', 'I9', 'I10', 'I11', 'I12', 'I13', 'I14', 'I15', 'I16', 'I17', 'I18', 'I19', 'I20'])
plt.title("Hausdorff Distance Heatmap")
plt.show()

# Hacer Pairwise Distance Matrix (with heatmap) para circulo, lemniscata, linea
# también para círculos One-to-All (reference image)
# Mean and Standard Deviation 